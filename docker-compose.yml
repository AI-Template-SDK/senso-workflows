services:
  worker:
    build:
      context: .
      dockerfile: docker/worker.Dockerfile
      args:
        - GITHUB_PAT=${GITHUB_PAT}
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      seed:
        condition: service_completed_successfully
      inngest:
        condition: service_started
    environment:
      # Server configuration
      - PORT=8080
      - ENVIRONMENT=development
      # Force Inngest SDK to Dev Mode (disables signature verification)
      - INNGEST_DEV=1
      # Inngest configuration
      - INNGEST_EVENT_KEY=test-event-key
      - INNGEST_BASE_URL=http://inngest:8288
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk-test-key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-sk-ant-test-key}
      # Application configuration
      - APPLICATION_API_URL=${APPLICATION_API_URL:-http://host.docker.internal:3000}
      - API_TOKEN=${API_TOKEN:-test-token}
      # Database configuration
      - DATABASE_URL=postgresql://senso2_admin:senso2_password@postgres:5432/senso2?sslmode=disable
      # Database Connection Pool Settings
      - DB_MAX_OPEN_CONNS=25
      - DB_MAX_IDLE_CONNS=25
      - DB_CONN_MAX_LIFETIME=300
      - DB_SSLMODE=disable
    networks:
      - app-network
    restart: unless-stopped

  migrate:
    build:
      context: .
      dockerfile: docker/migrate.Dockerfile
      args:
        - GITHUB_PAT=${GITHUB_PAT}
    environment:
      - DATABASE_URL=postgresql://senso2_admin:senso2_password@postgres:5432/senso2?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure

  seed:
    image: postgres:14-alpine
    environment:
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=senso2_admin
      - PGPASSWORD=senso2_password
      - PGDATABASE=senso2
    volumes:
      - ./seed.sql:/seed.sql
    command: psql -f /seed.sql
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - app-network
    restart: on-failure

  inngest:
    image: inngest/inngest:latest
    command: 'inngest dev -u http://worker:8080/api/inngest'
    ports:
      - '8288:8288'
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=senso2_admin
      - POSTGRES_PASSWORD=senso2_password
      - POSTGRES_DB=senso2
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U senso2_admin -d senso2"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: